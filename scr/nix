https://nixos.wiki/wiki/Flakes
1. install nix
2. nix-env -iA nixpkgs.nixUnstable
mkdir -p ~/.config/nix
echo 'experimental-features = nix-command flakes' >> ~/.config/nix/nix.conf

# no systemctl service running for the nix daemon
#sudo systemctl stop nix-daemon.socket
#sudo systemctl stop nix-daemon.service
#sudo systemctl start nix-daemon.socket
#sudo systemctl start nix-daemon.service

nix shell 'github:nixos/nixpkgs/nixpkgs-unstable#hello'
echo $PATH

other ways to get into the same shell:
nix shell 'https://github.com/nixos/nixpkgs/archive/nixpkgs-unstable.tar.gz#hello'
nix shell 'git+https://github.com/nixos/nixpkgs?ref=nixpkgs-unstable#hello'
nix shell 'nixpkgs#hello' # nixpkgs is specified in the default registry to be github:nixos/nixpkgs

# to just build
nix build 'nixpkgs#hello'
./result/bin/hello

# to develop
nix develop 'nixpkgs#hello'
unpackPhase, configurePhase, configure, buildPhase

# As replacement for nix-env (permanently install stuff):
nix profile install 'nixpkgs#hello'
nix profile list
nix profile upgrade hello # does not match any packages
nix profile remove hello # does not match any packages

# To manipulate flakes themself, use nix flake
nix flake show
nix flake clone
nix flake lock

# example for nix flake lock
## flake.nix
{
  inputs = {
    home-manager.url = "github:nix-community/home-manager";
  };
}
nix flake lock --update-input home-manager
