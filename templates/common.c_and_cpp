https://best.openssf.org/Compiler-Hardening-Guides/Compiler-Options-Hardening-Guide-for-C-and-C++.html

1. tldr; flags
1.1 opt
-O2
1.2 warnings
-Wall -Wformat -Wformat=2 -Wconversion -Wimplicit-fallthrough -Werror=format-security \
1.3 protections and checks
-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 \
-D_GLIBCXX_ASSERTIONS \
-fstrict-flex-arrays=3 \
-fstack-clash-protection -fstack-protector-strong \
1.4 linker
-Wl,-z,nodlopen -Wl,-z,noexecstack \
-Wl,-z,relro -Wl,-z,now \
-Wl,--as-needed -Wl,--no-copy-dt-needed-entries
Suggestion to also use -Wsystem-headers, if feasible.
Note: This document does not include C++ options for hardening llvm libc++.
See further "Additional options flags" for production code etc.
Unclear: -fno-omit-frame-pointer ?
2. context
3. recommendations
cc -O2 -dM -E - < /dev/null
4. discouraged
search paths
5. sanitizers
instrumented sanitizers with 2x-4x slodown vs dynamic ones with 20x-50x.
-fsanitize=address
-fsanitize=thread
-fsanitize=leak
-fsanitize=undefined
-O1 -g -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-common
6. maintain debug infos in separate files
objcopy --only-keep-debug executable_file executable_file.debug
objcopy --strip-unneeded executable_file
objcopy --add-gnu-debuglink=executable_file.debug executable_file

strip --strip-unneeded executable_file
7. compiling compilers and linkers
--enable-default-pie --enable-default-ssp --enable-host-pie --enable-host-bind-now
--disable-default-execstack --enable-warn-execstack --enable-error-execstack --enable-warn-rwx-segments --enable-error-rwx-segments --enable-relro --enable-textrel-check=error --enable-secureplt
8. missing are fuzzer usage