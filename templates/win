Get installation location of msvc c, c++ compiler and linker with batch file:
cd %ProgramFiles(x86)%\Microsoft Visual Studio\Installer\
vswhere
installationPath 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community'
fd cl.exe 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community'
fd link.exe 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community'
'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64\cl.exe'
'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64\link.exe'
VS2015 x64 Native Tools Command Prompt
x64 Native Tools Command Prompt for VS2019

====build_system
.sln file contains 1. build modes (Debug/Release;x64 etc), 2. dependencies and
3. actively tracked dependencies (*must* be marked as actively tracked or they are
ignored, even though the dependency marks them as needed and there is a change)
Adjusting
1. graphically or via msbuild
2. via Right click on project => Build dependencies => Project dependencies
3. via below build modes "configuration manager" => Configuration Platform Build and Deploy

The build format is a hash like EAEE7988-385C-4CEF-AF76-20513D802A97 for each
project reference (with the hash being generated in an unspecified way), so
Visual Studio is needed to generate the hash for the project.

Clean rebuild and incremental for Debug and Release profiles
msbuild project.sln /t:Clean;Rebuild /p:Configuration=Debug /p:Platform=x64 -nologo
msbuild project.sln /t:Build /p:Configuration=Debug /p:Platform=x64 -nologo
msbuild project.sln /t:Clean;Rebuild /p:Configuration=Release /p:Platform=x64 -nologo
msbuild project.sln /t:Build /p:Configuration=Release /p:Platform=x64 -nologo -v:diag
Debug problems via -v:Lvl Lvl is q,m,n,d,diag
msbuild project.sln /t:Build /p:Configuration=Release /p:Platform=x64 -nologo -v:d

This should probably run analysis manually
msbuild MySolution.sln /p:RunCodeAnalysis=true

Does Visual Studio have 'include what you use' iwyu to make compilation incrmental?
https://github.com/include-what-you-use/include-what-you-use
https://devblogs.microsoft.com/cppblog/recommendations-to-speed-c-builds-in-visual-studio/#_incremental
https://learn.microsoft.com/en-us/visualstudio/ide/walkthrough-building-an-application?view=vs-2022
https://stackoverflow.com/questions/37785991/where-to-add-the-directory-for-def-file-in-visual-studio

Visual Studio Plugins
- editorconfig
https://learn.microsoft.com/en-us/visualstudio/ide/cpp-editorconfig-properties?view=vs-2019&viewFallbackFrom=vs-2022
- git diff margin
  * does not support git worktrees https://github.com/laurentkempe/GitDiffMargin/issues/88
  * may randomly fail https://github.com/laurentkempe/GitDiffMargin/issues/460
- vsvim has many conflicting keybindings
- Solution Color needed, because VisualStudio has no trivial way to view the path to the workdir

====build_problems
Build problems, ie incremental build problems:
Tools -> Options -> Proj & Sol. -> Build & Run -> build log verbosity -> diagnostic
Search for "Project not up to date because" or "missing".
Compare with msbuild output.

Generate compile_commands.json from Visual Studio with "Clang Power Tools VS extension".
This mandates Visual Studio >= 2017. Alternative of bear likely does not work.
https://clangpowertools.com/blog/generate-json-compilation-database.html

workaround admin privileges for installer files (.exe):
insert into run.bat with :set encoding=ansi
set __COMPAT_LAYER=RunAsInvoker
start INSTALLER.exe
and call it from cmd.exe as run.bat

zig:
Look into the ci scripts for windows https://github.com/ziglang/zig/tree/master/ci
and get https://ziglang.org/deps/zig+llvm+lld+clang-x86_64-windows-gnu-$VERSION.zip

Getting ntdll (and win32) calls
https://learn.microsoft.com/en-us/sysinternals/downloads/procmon
https://www.x86matthew.com/view_post?id=lognt32
http://jacquelin.potier.free.fr/winapioverride32/

Debugging methods
https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/choosing-the-best-remote-debugging-method
https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/remote-debugging-through-the-debugger
https://stackoverflow.com/questions/25032832/way-to-configure-vs-remote-debugger-via-cmd

Kernel mode debugging session http://www.vallejo.cc/2015/04/debugging-programs-with-multiple.html

Timetravel debugging
https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/time-travel-debugging-overview
https://github.com/microsoft/WinDbg-Samples/blob/master/TTDQueries/tutorial-instructions.md
WinDbg:
1. File -> start debugging -> launch executable (advanced)
2. File -> Start debugging -> Attach to process.
Step Back Forwards     p-  p
Trace Back Forwards    t-  t
Go Back Forwards       g-  g
https://learn.microsoft.com/de-de/windows-hardware/drivers/debugger/getting-started-with-windbg
Alternatively, use TTD.exe
Graphical usage available from VS2019 on and in VS Code (Time Travel Debug for C/C++ extension).

Performance profiling
http://euccas.github.io/blog/20180213/performance-profiling-tools-on-windows.html
Tools:
Windows Performance Recorder (WPR)
Windows Performance Analyzer (WPA)
PerfView
(including memory usage)
https://learn.microsoft.com/en-us/visualstudio/profiling/memory-usage-without-debugging2?view=vs-2022

Perf traces
https://github.com/google/UIforETW
Motivation https://randomascii.wordpress.com/2015/04/14/uiforetw-windows-performance-made-easier/
====central explanation page: https://randomascii.wordpress.com/2015/09/24/etw-central/
Getting traces https://randomascii.wordpress.com/2015/09/01/xperf-basics-recording-a-trace-the-ultimate-easy-way/
Getting traces as shortlink https://tinyurl.com/etwtracing
> not sure, try installing Intel Performance Counter Monitor
Analysis of traces: https://randomascii.wordpress.com/2014/08/19/etw-training-videos-available-now/

Memory profiling
https://thatonegamedev.com/cpp/memory-profiling-on-windows-for-c/
https://stackoverflow.com/questions/4322678/how-to-do-memory-profiling-on-windows
https://stackoverflow.com/questions/413477/is-there-a-good-valgrind-substitute-for-windows
https://github.com/DynamoRIO/drmemory
https://github.com/RudjiGames/MTuner
AppVerifier https://learn.microsoft.com/en-us/windows/win32/win7appqual/application-verifier?redirectedfrom=MSDN

Large and huge pages on Windows (2MB, 1GB)
https://mahdytech.com/large-pages-how-when/
- Large-Pages cannot be paged out, so they remain in RAM
- SeLockMemoryPrivilege is needed for a user, but it is persistent
```pwsh
$objUser = New-Object System.Security.Principal.NTAccount("USER")
$strSID = $objUser.Translate([System.Security.Principal.SecurityIdentifier])
$strSID.Value
```
wireguard on windows https://rair.dev/wireguard-windows-multiple-simultaneous-tunnels/
https://git.zx2c4.com/wireguard-windows/about/docs/netquirk.md
https://github.com/WireGuard/wireguard-windows

ssh server https://learn.microsoft.com/de-de/windows/terminal/tutorials/ssh

Nix on Windows
win10 https://nathan.gs/2019/04/12/nix-on-windows/
win11 https://www.reddit.com/r/NixOS/comments/151pm14/script_for_bootstrapping_nix_on_wsl/
iso does not work,
WSL instructions assume systemd etc https://nixos.org/download.html#nix-install-windows
https://github.com/nix-community/NixOS-WSL hangs
win11 https://github.com/scottstephens/nix-wsl-bootstrap
https://github.com/NixOS/nix/issues/5874

CLI Installation and Fixup
https://christitus.com/install-windows-the-arch-linux-way/
https://christitus.com/fix-corrupt-windows-install/

overview of basic ones https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf
https://learn.microsoft.com/en-us/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view=vs-2022

shorcuts:
VS2015
next/prev tab              Ctrl-f6/Ctrl-Shift-f6
only compile current file  Ctrl-f7
search                     Ctrl-,
close document window      Ctrl-f4
snippet expanding          Ctrl-k-s
rename                     Ctrl-r,Ctrl-r
go back/forward            Ctrl-'-'/TODO
find                       Ctrl-f
  find next/prev           f3/Shift-f3
comment/uncomment          Ctrl-k Ctrl-c/Ctrl-k Ctrl-u
format
  file                     Ctrl-k Ctrl-d
  selection                Ctrl-k Ctrl-f
replace                    Ctrl-h
  within
  focus find entry         Alt-n
  focus replace field      Alt-p
  toggle match case        Alt-c
  toggle word              Alt-w
  toggle regex             Alt-e
  open loook in dropdown   Alt-l
  replace next             Alt-r
  replace all              Alt-a
  exit dialog              Esc
debugging+continue         f5
  stop debugging           Shift-f5
  toggle (enable) breakpt  (Ctrl-)f9
  step over                f10
  step into/out            f11/Shift-f11
  delete all breakpoints   Ctrl-Shift-f9
  break at fn              Ctrl-b
  break all                Ctrl-Alt-break
  run to cursor            Ctrl-f10
  set next statement       Ctrl-Shift-f10
  breakpoint window        Ctrl-Alt-b

toggle menu                Shift-f10
toggle dropdown menu       Alt-prefix
select
  word                     Ctrl-w
  line                     not in VS2015
select in component view   Ctrl-f2
  navigate                 tab
goto
  solution explorer           Ctrl-Alt-l
  out window                  TODO
  shell                       TODO
  code editor                 TODO
  error list                  TODO
  find symbol results         TODO
  tab finder                  TODO
  mark12..                    TODO
  before(/)after matching brace Ctrl-'`'
  between matching braces     Ctrl-}  (VS2019+)
    smart selection?
  next variable instance      Ctrl-Shift-Arrow
  next error                  Ctrl-Shift-f12
  previous error              unmapped
  next/prev local error       unmapped
  next/prev issue             Alt-PgUp/PgDn (VS2019+)
  next/prev window            Ctrl-Tab/Ctrl-Shift-Tab
fold
  toggle region                 Ctrl-m Ctrl-m
  collapse all but classes      Ctrl-m-o
  collapse all                  Ctrl-m-a
  expand all                    Ctrl-m-l
  expand all disable outlines   Ctrl-m-p
  collapse/uncollapse region    Ctrl-m-h/Ctrl-m-u
view
  split                       Alt-w-p-Enter
    jump between              f6
  normal                      Alt-w-p-p-Enter

file operations
  add new file                Ctrl-Shift-a

bookmarks
  toggle                          Ctrl-k Ctrl-k
  create new folder               Ctrl-k Ctrl-f
  prev/next                       Ctrl-k Ctrl-p/n
  prev/next in folder             Ctrl-Shift-k Ctrl-Shift-p/n
  jump to named one               not possible

multicursor
  selection                  Alt-mouse
  keyboard selection         Alt-Shift-Arrow
  VS2019+:
  multi-carets selection     Ctrl-Alt
  caret pattern selection    Alt-Shift-';'
  select next pattern match  Alt-Shift-'.'

custom shortcuts (Tools -> Options -> Environment -> Keyboard -> inserttext -> Assign
SetAsStartUp   “Set as Startup Project”   Ctrl-s Ctrl-t
TODO: this breaks Ctrl-s for save, because VS has no "backoff" algorithm like vim

SHENNANIGAN shutdown script may not get called at all + no diagnosis
Otherwise: Local group policy.
gpedit.msc -> Computer Configuration > Windows Settings > Scripts (Startup/Shutdown) > Shutdown (See Below)

https://www.mdsec.co.uk/2020/12/bypassing-user-mode-hooks-and-direct-invocation-of-system-calls-for-red-teams/
https://devblogs.microsoft.com/oldnewthing/20230926-00/?p=108824
https://www.ired.team/offensive-security/code-injection-process-injection/finding-kernel32-base-and-function-addresses-in-shellcode
https://chadaustin.me/2009/03/disabling-functions/ TODO
https://www.geoffchappell.com/studies/windows/win32/kernel32/api/index.htm
https://blog.improsec.com/tech-blog/win32k-system-call-filtering-deep-dive

https://rafaelhart.com/2014/12/nmap-wireshark/

Visual Studio Commandline Prompt
dumpbin -linkermember .\wpcap.lib
dumpbin /archivemembers|exports|symbols /OUT:filename .\wpcap.lib