Comparing GPUs

* staring at generated code by mesa
* roofline models
  + used to compare throughput of GPUs in % of optimal throughput as simple heuristic
  + idea: good bench suite

Debugging the 3D graphics stack
https://ballmerpeak.web.elte.hu/devblog/debugging-mesa-and-the-linux-3d-graphics-stack.html

https://johnhw.github.io/umap_primes/index.md.html
https://github.com/nDimensional/andromeda
* interesting graph visualization techniques

effortless CPU + GPU programming
https://chapel-lang.org/

2D graphics
Skia pipeline undocumented
most likely complex path+color operations are the latency adders, everything else should map to GPU semantics (if possible)
https://stackoverflow.com/questions/5762727/how-do-the-pieces-of-androids-2d-canvas-drawing-pipeline-fit-together
https://skia.org/docs/user/sksl/

GPU pipeline
vertex specification -> vertex shader -> tessellation -> geometry shader -> vertex post-processing -> primitive assembly -> rasterization -> fragment shader -> per-sample operation
