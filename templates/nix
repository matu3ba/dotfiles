non-nix system:
something broke
DONT USE THIS AS THIS PINS YOUR DEPENDENCIES ON SPECIFIC VERSION
nix-env -f '<nixpkgs>' -iA nixUnstable
nix-channel --udpate

__ home-manager __
manages ${HOME}
should be used as standalone to work everywhere, where nix works
without this impurities may creep in
temporary usage: nix-shell -p gnumake -p python27

__ flakes __
project-specific setups, overlays etc

__ profiles __
not platform-independent and do not work anywhere you have nix

nix shell 'github:nixos/nixpkgs/nixpkgs-unstable#hello'
nix build 'nixpkgs#hello'
nix develop 'nixpkgs#hello'

nix profile install 'nixpkgs#hello'
nix profile list
nix profile update hello
nix profile remove hello

nix flake show
nix flake clone
nix flake lock
nix flake lock –override-input input_name
nix flake lock –update-input input_name

# Flakes allow you to specify your code’s dependencies
# (e.g. remote Git repositories) in a declarative way,
# simply by listing them inside a flake.nix file
nix flake lock --update-input home-manager

For installation andd the basic introduction, read "practical nix flakes".
https://ghedam.at/a-tour-of-nix-flakes is the best flakes introduction so far, which
also does not use "legacyPackages".
As of 20220620,
nix has no good solution to define relative flakes for not cluttering the git history:
https://discourse.nixos.org/t/locally-excluding-nix-flakes-when-using-nix-independenly-of-upstream/16480/19
The current options are `git add -N` (adding to git commit) and `path:$(pwd)` (copies over whole path)
or `path:.`.

It is very unfortunate that this was introduced without a fallback until there are good tutorials.
```txt
$ nix develop
warning: Git tree '/home/user/dev/git/zig/zig/master' is dirty
error: getting status of '/nix/store/17iqqnm1l9admxzbpc9rgdz7fq7pkr2y-source/flake.nix': No such file or directory
```

Looking very useful:
https://github.com/nh2/nixos-vm-building
https://github.com/m-bdf/nixos-init-freedom
https://github.com/cachix/devenv
https://github.com/tweag/nickel, successor to nix, but very early mvp 0.1

Probably nicest book yet for flakes but not complete and structured:
https://nixos-and-flakes.thiscute.world/

https://blog.wesleyac.com/posts/the-curse-of-nixos
bad:
- 1. own programming language, complicated and annoying to understand
- 2. no real isolation (only path hackery), but overlayfs on Linux itself has many limitations (paths and stacking)
  * related to core design issue of Linux (Unix file permission system), which stores permission of user and group in each file

More interesting projects
embedded OS https://github.com/cleverca22/not-os

Features, which can be considered as missing from nix:
- namespace control tools :
  * why can't you do different hierarchies (see: GoboLinux, djb's /package, or even a completely custom one)
  * why mixing different alternatives: service managers, libc's, or even compile flags is still so difficult)
- package categories (missing metadata)
  * play market/app store figured this out 10, 15 years ago, why do we still resort to external search engines
- a non-DSL programming language (guix seems to do just that, but it's hopelessly corrupted by GNU-no-firmware philosophy)
- portability
  * no systemd,
  * no Linux-only features
  * option to put packages in ISO's, qcow2's, plain old tarballs (see root tarballs, or OpenBSD's site*.tgz)
    + winetricks doesn't need it's own dxvk's, directx's, and faudio's etc
