____Usage____
    ssh user@domain@ip
Options
    -x    Disable X11 forwarding
    -X    Enable X11 forwarding
    -Y    Enable trusted X11 forwarding
    -f    Go to background before cmd execution
    -L    Port forwarding option
Environment variables
     DISPLAY, HOME, LOGNAME, MAIL, PATH, TZ, USER
     and all variables prefixed with SSH_

____Generating_keys____
Generating private key with 200 instead of 16 default rounds.
With
COMMENT="$(date +'%Y%m%d')${USER}@${HOSTNAME}"
ssh-keygen -a 200 -t ed25519 -C "${COMMENT}" -N "PASSPHRASE" -f ~/.ssh/PRIVATEKEYNAME
and with passphrase dialog
ssh-keygen -a 200 -t ed25519 -C "${COMMENT}" -f ~/.ssh/PRIVATEKEYNAME
Note: ssh keys have no concept like expiry date, so the server needs to
accept or reject the key.

General format:
ssh user@domain@ip
First, add credentials to your ssh client.
ssh-add
Then, copy credentials into user keyring to prevent request for authentication:
ssh-copy-id user@domain@ip
Now you can use `ssh user@domain@ip` without authentication prompt.
You see inside ~/.ssh/authorized_keys on the target, which keys were authorized.
Note, that if you add /root/.ssh/authorized_keys to get root access on the
target, it is identical to ~/.ssh/authorized_keys, if you are root.

If there are problems either:
1. restart ssh daemon (dropbear, ssh etc)
2. add configuration
3. add ~/.ssh/authorized_keys by other means on the target
3. ssh-add pathtokey
4. ssh-copy-id user@ip
like in ./scr/gen_ssh.sh
or on "Permission denied (publickey,password).":
0. Fixup your config like described (PreferredAuthentications, IdentitiesOnly)
1. Re-enable passwd authentication in /etc/ssh/sshd_config:
PasswordAuthentication yes
2. Restart ssh server:
service sshd restart
3. Copy key after login:
ssh-copy-id -i ~/.ssh/id_rsa.pub USER@HOST -p PORT
4. Next login should work without password:
ssh USER@HOST
5. Disable password in /etc/ssh/sshd_config:
PasswordAuthentication no

ssh may complain with `WARNING: UNPROTECTED PRIVATE KEY FILE!`
Fix it on the machine with:
sudo chmod 600 *
sudo chmod 644 ~/.ssh/known_hosts
sudo chmod 755 ~/.ssh

ssh may complain with file has invalid format:
Most likely a configuration problem, because ssh does not check your config for
validity.
Check your key validity with `ssh-keygen -l -f .ssh/KEYNAME.pub`.

checking, if ssh agent is listening on port 22
netstat -atpn | grep 22
checking, if ssh deamon (for server) installed:
sshd --version

checklist ssh correctly running
1. enable logs: /etc/ssh/sshd_config and `LogLevel DEBUG3` via `man sshd_config`
2. network works?
3. ip table correct?
4. ssh listening?
5. firewall or netfilter, firejail etc blocking things?
6. where to look for more help

____Setup_gpg____
fish
set -U GPG_TTY "$(tty)"
set -U SSH_AUTH_SOCK $(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch "gpg-agent"
trap "gpgconf --kill gpg-agent" exit
bash
export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch 'gpg-agent'
trap 'gpgconf --kill gpg-agent' exit

// YYYY-MM-DD being expiration date
gpg --quick-generate-key \
    'Your_Name <your.email@example.com> (optional_comment)' \
    ed25519 cert YYYY-MM-DD
// save keyfingerprint to env var without spaces (it says key-Fingerprint on the output)
export KEYFP=keyfingerprint
export KEYFP=keyfingerprint
// subkeys for sign, encrypt, authenticate
gpg --quick-add-key $KEYFP ed25519 sign 1y
gpg --quick-add-key $KEYFP cv25519 encr 1y
gpg --quick-add-key $KEYFP ed25519 auth 1y
// verify that it works
gpg -K
gpg --list-secret-keys --keyid-format=long

Adjust the .gitconfig with the output(without any 0x in front):
[user]
  email = MAIL
  name = NAME
  signingkey = OUTPUT_SIGNKEY!
[commit]
 gpgsign = true

ssh-add -l

____Configuration____
~/.ssh/config for configs:
AddKeysToAgent yes
# NAME account
Host github.com
  HostName github.com
  User git
  PreferredAuthentications publickey
  IdentityFile ~/.ssh/PRIVATEKEYNAME
  IdentitiesOnly yes

github ssh config might need

Host github.com
  HostName ssh.github.com
  Port 443
  User git
  PreferredAuthentications publickey
  IdentityFile ~/.ssh/github_ed25519
  IdentitiesOnly yes

Config Options
*PreferredAuthentications* keyboard-interactive,password,publickey,hostbased,gssapi-with-mic
To use explicitly the given config key for the host, set
*IdentitiesOnly* yes

____FAQ____
Problem https://superuser.com/questions/1631020/gpg-agent-ssh-support-throwing-sign-and-send-pubkey-signing-failed-for-rsa-no
sign_and_send_pubkey: signing failed for ED25519 PRIVATE_KEY_PATH from agent: agent refused operation
Solution
1. create new empty tab in tmux/zellij or ideally new terminal emulator to
   force handling of tty in that window
2. gpg-connect-agent updatestartuptty /bye >/dev/null
3. scp does not work, ie creates files with weird names.
   ALWAYS append : or scp has cp behavior.
