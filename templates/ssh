~/.ssh/config for configs:
AddKeysToAgent yes
# NAME account
Host github.com
  HostName github.com
  User git
  PreferredAuthentications publickey
  IdentityFile ~/.ssh/PRIVATEKEYNAME
  IdentitiesOnly yes

Generating private key with 200 instead of 16 default rounds.
With
COMMENT="$(date +'%Y%m%d')${USER}@${HOSTNAME}"
ssh-keygen -a 200 -t ed25519 -C "${COMMENT}" -N "PASSPHRASE" -f ~/.ssh/PRIVATEKEYNAME
and with passphrase dialog
ssh-keygen -a 200 -t ed25519 -C "${COMMENT}" -f ~/.ssh/PRIVATEKEYNAME
Note: ssh keys have no concept like expiry date, so the server needs to
accept or reject the key.

General format:
ssh user@domain@ip
First, add credentials to your ssh client.
ssh-add
Then, copy credentials into user keyring to prevent request for authentication:
ssh-copy-id user@domain@ip
Now you can use `ssh user@domain@ip` without authentication prompt.
You see inside ~/.ssh/authorized_keys on the target, which keys were authorized.
Note, that if you add /root/.ssh/authorized_keys to get root access on the
target, it is identical to ~/.ssh/authorized_keys, if you are root.

If there are problems:
1. restart ssh daemon (dropbear, ssh etc)
2. add configuration
3. add ~/.ssh/authorized_keys by other means on the target
3. ssh-add pathtokey
4. ssh-copy-id user@ip
like in ./scr/gen_ssh.sh

ssh may complain with `WARNING: UNPROTECTED PRIVATE KEY FILE!`
Fix it on the machine with:
sudo chmod 600 *
sudo chmod 644 ~/.ssh/known_hosts
sudo chmod 755 ~/.ssh

ssh may complain with file has invalid format:
Most likely a configuration problem, because ssh does not check your config for
validity.
Check your key validity with `ssh-keygen -l -f .ssh/KEYNAME.pub`.

checking, if ssh agent is listening on port 22
netstat -atpn | grep 22
checking, if ssh deamon (for server) installed:
sshd --version

checklist ssh correctly running
1. enable logs: TODO
2. network works?
3. ip table correct?
4. ssh listening?
5. firewall or netfilter, firejail etc blocking things?
6. where to look for more help

github ssh config might need

Host github.com
  HostName ssh.github.com
  Port 443
  User git
  PreferredAuthentications publickey
  IdentityFile ~/.ssh/github_ed25519
  IdentitiesOnly yes
